trigger:
- master
- patch_branch

stages:

#####################################
# Linux Stages - Microsoft Hosted VMs
#####################################

  ### Linux Build Stage ###
- stage: linux_build_stage
  displayName: 'Building package on Ubuntu-16.04'
  jobs:
  - job: buildRepo
    displayName: 'Compile Package'
    timeoutInMinutes: 150
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
    # Manually adding conda to the PATH is a step required by Microsoft
    - bash: echo "##vso[task.prependpath]$CONDA/bin"
      displayName: 'Add conda to PATH'
    - task: CondaEnvironment@0
      inputs:
        environmentName: 'Build'
        packageSpecs: 'python=2.7'
    - bash: |
        conda install --yes --quiet -c conda-forge/label/cf201901 -c fermi fermi-repoman scons swig
        conda install --yes --quiet --only-deps -c conda-forge/label/cf201901 -c fermi fermitools
      displayName: 'Setup Build environment'
    - bash: |
        repoman --remote-base https://github.com/fermi-lat checkout --force --develop ScienceTools conda
        rm -rf tip
        git clone https://github.com/fermi-lat/tip
      displayName: 'Clone Repos'
    - bash: |
        mkdir -p ${CONDA_PREFIX}/include/fftw
        ln -s ${CONDA_PREFIX}/include/fftw3.* ${CONDA_PREFIX}/include/fftw
      displayName: 'FFTW relinking'
    - bash: scons -C ScienceTools --site-dir=../SConsShared/site_scons --with-cc=/usr/bin/gcc --with-cxx=/usr/bin/g++ --ccflags="-O2" --cxxflags="-O2 -std=c++11" --conda=$CONDA_PREFIX tip
      displayName: 'Compile Package'

- stage: pipeline_launch_stage
  displayName: 'Launch Fermitools CI Pipeline'
  condition: succeeded('linux_build_stage')
  jobs:
  - job: 
    variables:
      - name: version
        value: 
      - name: revision
        value:
      - name: patch
        value:
    steps:
    - bash: |
        cd ../
        git clone https://github.com/fermi-lat/fermitools-conda
      displayName: 'Clone repo'
    - bash: |
        cd ../fermitools-conda
        ls
        echo patch is $patch
        grep -i 'set version' meta.yaml | awk '{ print $5}' | sed 's/"//g' | cut -d "." -f 1
        echo "##vso[task.setvariable variable=version]$(grep -i 'set version' meta.yaml | awk '{ print $5}' | sed 's/"//g' | cut -d "." -f 1)"
        echo first set
        echo version is $version
        echo "##vso[task.setvariable variable=revision]$(grep -i 'set version' meta.yaml | awk '{ print $5}' | sed 's/"//g' | cut -d "." -f 2)"
        echo second set
        echo revision is $revision
        echo "##vso[task.setvariable variable=patch]$(grep -i 'set version' meta.yaml | awk '{ print $5}' | sed 's/"//g' | cut -d "." -f 3)"
        echo third set
        echo version is $version
        echo revision is $revision
        echo patch is $patch
        echo Version is $[version].$[revision].$[patch]
        echo "##vso[task.setvariable variable=newpatch][expr $patch + 1]"
        echo New Version is $[version].$[revision].$[newpatch]
      displayName: 'Extract version information'
    - bash: |
        cd ../fermitools-conda
        grep -i 'set version' meta.yaml | awk '{ gsub($5,"\"$(version).$(revision).$[expr patch + 1]\"",$5); print $5}'